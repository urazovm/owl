var item = $("<%= escape_javascript(render(partial: 'items/edit_form', locals: { item: @item })) %>");
$('#item_<%= @item.id %>').replaceWith(item);

<% if @item.type == Item::TYPES.index(:image) %>

    var url = "<%= list_item_path(@item.list, @item) %>";
    var formSelector = '#item_<%= @item.id %>_form';
    var form = $(formSelector);
    var fileinput = $(formSelector + ' .fileinput');
    var filepreview = $(formSelector + ' .filepreview');
    var formsubmit = $(formSelector + ' .submit');
    var formitemname = $(formSelector + ' .item_name');
    var newfileloaded = false;

    var fileupload = $('#fileupload').fileupload({
        url: url,
        method: 'put',
        dataType: 'text',
        autoUpload: false,
        acceptFileTypes: /(\.|\/)(gif|jpe?g|png)$/i,
        maxFileSize: 1500000,
        // dropZone: $('#dropzone'),
        disableImageResize: /Android(?!.*Chrome)|Opera/.test(window.navigator.userAgent),
        previewMaxWidth: 120,
        previewMaxHeight: 120,
        previewCrop: true
    }).on('fileuploadload', function (e, data) {
        console.log(1);
        console.log(data);
    }).on('fileuploadadd', function (e, data) {
        data.context = $('<div/>').appendTo(filepreview.find('.files'));
        $(formSelector + ' .submit').data(data);
        filepreview.show();
        fileinput.hide();
        formitemname.show();
        formsubmit.show();
        newfileloaded = true;
    }).on('fileuploadprocessalways', function (e, data) {
        var index = data.index;
        var file = data.files[index];
        var node = $(data.context);
        if (file.preview) {
            node.prepend(file.preview);
        }
        if (file.error) {
            node.append('<br>').append($('<span class="text-danger"/>').text(file.error));
        }
    }).on('fileuploadfail', function (e, data) {
        alert('fail');
    }).on('fileuploaddone', function (e, data) {
        eval(data.result);
    }).prop('disabled', !$.support.fileInput).parent().addClass($.support.fileInput ? undefined : 'disabled');

    $(formSelector + ' .delete').on('click', function(e) {
        if (formsubmit.data() && formsubmit.data().files) {
            formsubmit.data().files.pop();
        }
        filepreview.find('.files').html('');
        filepreview.hide();
        formsubmit.hide();
        formitemname.hide();
        fileinput.show();
        newfileloaded = false;
    });

    formsubmit.on('click', function(e) {
        e.preventDefault();
        e.stopPropagation();
        if (newfileloaded) {
            $(this).data().submit();
        } else {
            form.submit();
        }
    });

    if (filepreview.find('.files').children().length == 0) {
        filepreview.hide();
        fileinput.show();
        formsubmit.hide();
        formitemname.hide();
    } else {
        filepreview.show();
        fileinput.hide();
        formsubmit.show();
        formitemname.show();
    }

<% end %>
